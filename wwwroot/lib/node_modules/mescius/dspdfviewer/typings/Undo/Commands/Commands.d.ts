import GcPdfViewer from "../../GcPdfViewer";
import { SearchReplacementHighlight } from "../../HighlightManager/SearchReplacementHighlight";
import { OpenParameters } from "../../Models/ViewerTypes";
import { UndoCommandSupport } from "./UndoCommandSupport";
export declare class AddReplaceTextHighlightCommand implements UndoCommandSupport {
    viewer: GcPdfViewer;
    highlights: SearchReplacementHighlight[];
    pageIndex: number;
    indices: {
        start: number;
        end: number;
    };
    constructor(viewer: GcPdfViewer, highlights: SearchReplacementHighlight[], pageIndex: number, indices: {
        start: number;
        end: number;
    });
    name: string;
    execute(viewer: GcPdfViewer): Promise<void>;
    undo(viewer: GcPdfViewer): Promise<void>;
}
export declare class OpenCommand implements UndoCommandSupport {
    viewer: GcPdfViewer;
    file: any;
    params: OpenParameters;
    private _prevFile;
    private _prevOpenParameters;
    private _prevFrameIndex;
    constructor(viewer: GcPdfViewer, file: any, params: OpenParameters);
    name: string;
    execute(viewer: GcPdfViewer): Promise<void>;
    undo(viewer: GcPdfViewer): Promise<void>;
}
export declare class CloseCommand implements UndoCommandSupport {
    viewer: GcPdfViewer;
    private _prevDataUri;
    private _prevOpenParameters;
    constructor(viewer: GcPdfViewer);
    name: string;
    execute(viewer: GcPdfViewer): Promise<void>;
    undo(viewer: GcPdfViewer): Promise<void>;
}
