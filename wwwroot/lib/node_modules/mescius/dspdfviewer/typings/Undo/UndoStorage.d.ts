import GcPdfViewer from "../GcPdfViewer";
import { ViewerOptions } from "../ViewerOptions";
import { IUndoStorage } from "./IUndoStorage";
import { UndoCommandSupport } from "./Commands/UndoCommandSupport";
export declare class UndoStorage implements IUndoStorage {
    viewer: GcPdfViewer;
    skipCommandsHash: {
        [name: string]: boolean;
    };
    private _index;
    private _eventBus?;
    private _commandsList;
    private _undoInProgress;
    private _disabled;
    private _maxLevels;
    constructor(viewer: GcPdfViewer);
    applyOptions(options: ViewerOptions): void;
    dispose(): void;
    clear(): void;
    isCommandSupported(command: UndoCommandSupport): boolean;
    execute(command: UndoCommandSupport): Promise<void>;
    onCommandExecuted(command: UndoCommandSupport): void;
    undo(): Promise<void>;
    redo(): Promise<void>;
    get hasUndo(): boolean;
    get hasRedo(): boolean;
    get undoIndex(): number;
    get undoCount(): number;
    get undoInProgress(): boolean;
    get commands(): UndoCommandSupport[];
    applyOptionsInternal(options: Partial<ViewerOptions>, isInit?: boolean): void;
    private _init;
    private _onAddReplaceHighlights;
    private _legacyUndoCount;
    private _onLegacyUndoStorageChanged;
    private _reset;
}
