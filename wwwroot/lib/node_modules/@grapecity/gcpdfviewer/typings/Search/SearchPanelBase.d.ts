/// <reference path="../vendor/i18next.d.ts" />
//@ts-ignore
import { i18n } from "i18next";
/// <reference path="../vendor/react/react.d.ts" />
//@ts-ignore
import { Component } from "react";
import { GcPdfSearcher } from "./GcPdfSearcher";
import { SearchWorker } from "./SearchWorker";
import { FindOptions, SearchOptionType, SearchPanelModel, SearchPanelProps, SearchResult } from "./types";
export declare class SearchPanelBase extends Component<SearchPanelProps, SearchPanelModel> {
    outerDiv: HTMLDivElement | null;
    protected _mounted: boolean;
    protected _optionsDirty: boolean;
    get searcher(): GcPdfSearcher;
    get viewer(): import("..").GcPdfViewer;
    get i18n(): i18n;
    get searchWorker(): SearchWorker;
    componentDidMount(): void;
    componentWillUnmount(): void;
    onQueryInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onOptionToggle(option: SearchOptionType, checked: boolean): void;
    resetResults(): void;
    setOptions(options: FindOptions): void;
    updateText(text: string): void;
    onEscKey(): Promise<void>;
    onEnterKey(): Promise<void>;
    getBriefResultsInfo(): string;
    updateBriefResultsInfo(briefInfo?: string): void;
    highlightNextSearchResult(backward?: boolean): Promise<void>;
    onSearchBtnClick(): Promise<void>;
    loadMoreResults(maxResultsCount?: number): Promise<boolean>;
    onResultClick(result: SearchResult | null): Promise<void>;
    onKeyPress: (e: any) => void;
    ensureSelectedResultClass(result: SearchResult | null): void;
}
