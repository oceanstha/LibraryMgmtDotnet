import { IGcTextRect } from "../Models/GcMeasurementTypes";
import { GcPdfSearcher } from "./GcPdfSearcher";
import { SearchPanelBase } from "./SearchPanelBase";
import { PaintedBoxInfo, ProgressModel, SearchResult, TextPartsQuadPoints } from "./types";
export declare function getSearchResultsCount(status: 'ready' | 'inprogress' | 'suspended' | 'done' | 'cancelled', results: SearchResult[], progress: ProgressModel, searcher: GcPdfSearcher, _searchPanel: SearchPanelBase): string;
export declare function getResultId(result: SearchResult): string;
export declare function calculateScaledPaintedBoxInfo(textRect: IGcTextRect | null, pageIndex: number, pageView: any, pageRotation: number): IGcTextRect & PaintedBoxInfo | null;
export declare function calculateTextRect(geom: any, styles: any, viewport: any): IGcTextRect | null;
export declare function getAxialAlignedBoundingBox(r: any, m: any): number[];
export declare function transform(m1: any, m2: any): any[];
export declare function applyTransform(p: any, m: any): any[];
export declare function convertSearchMatches(matches: number[], matchesLength: number[], queryLen: number, pageContent: {
    items: IGcTextRect[];
    styles: any[];
}): {
    begin: {
        divIdx: number;
        offset: number;
    };
    end: {
        divIdx: number;
        offset: number;
    };
}[];
export declare function collectHighlightRectangles(begin: {
    divIdx: number;
    offset: number;
}, end: {
    divIdx: number;
    offset: number;
}, pageContent: any): {
    rect: IGcTextRect;
    fromOffset: number;
    toOffset: number;
}[];
export declare function convertedMatchesToQuadPoints(convertedMatches: any, pageContent: any, pageIndex: number, viewer: any): TextPartsQuadPoints;
