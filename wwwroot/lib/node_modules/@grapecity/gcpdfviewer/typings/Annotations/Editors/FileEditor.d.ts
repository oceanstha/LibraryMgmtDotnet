/// <reference path="../../vendor/react/react.d.ts" />
//@ts-ignore
import React, { Component } from 'react';
//@ts-ignore
import { PropertyEditorProps } from '@grapecity/core-ui';
/// <reference path="../../vendor/i18next.d.ts" />
//@ts-ignore
import { i18n } from 'i18next';
import { FileAttachmentAnnotation } from '../AnnotationTypes';
import { GcPdfViewer } from '../../GcPdfViewer';
import { SetMultiplePropertiesFn } from '../types';
export type FileEditorProps = PropertyEditorProps & {
    in17n: i18n;
    setProperties: SetMultiplePropertiesFn;
};
export declare class FileEditor extends Component<FileEditorProps, any> {
    static pendingFileDialog: boolean;
    protected _fileReader: FileReader;
    protected _fileInput?: HTMLInputElement;
    constructor(props: any, context: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    get pageIndex(): number;
    get originalNode(): FileAttachmentAnnotation;
    get viewer(): GcPdfViewer;
    hasData(): boolean;
    get fileData(): Uint8Array | null;
    get inputFileName(): string;
    render(): React.JSX.Element;
    renderFileSizeLabel(): React.JSX.Element;
    protected _onRemoveAttachmentClick(e: any): false | undefined;
    protected _onDownloadClick(e: any): boolean;
    protected getAcceptExtensions(): string;
    protected getValuePath(): string;
    protected getDescriptorType(): string;
    protected get filePropName(): string;
    get fileInput(): HTMLInputElement;
    protected selectLocalFile(): void;
    protected checkPropertyDescriptor(): void;
    protected getFileNameDescriptor(): PropertyDescriptor;
    protected _onChange(): void;
}
