@model IEnumerable<LibraryMgmt.ViewModel.BookViewModel>

@{
    ViewData["Title"] = "Index";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["NotFoundMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["NotFoundMessage"]
    </div>
}

@if (TempData["SubsciptionSuccess"] != null)
{
    <div class="alert alert-success">
        @TempData["SubsciptionSuccess"]
    </div>
}
@if (TempData["SubscriptionExist"] != null)
{
    <div class="alert alert-success">
        @TempData["SubscriptionExist"]
    </div>
}




<h1>BOOKS</h1>
@if (User.HasClaim(c => c.Type == "Role" && (c.Value == "Admin" | c.Value == "Manager")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form method="get" asp-action="Index">
    <input type="text" name="searchTitle" placeholder="Search by title" value="@ViewData["CurrentFilter"]" />
    <button type="submit">Search</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book.Author)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.Book.Description)
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @Html.DisplayFor(modelItem => item.Book.Title)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Book.Author)
            </td>
            
            <td>
                    @Html.DisplayFor(modelItem => item.Book.Description)
            </td>
            
                @if (User.HasClaim(c => c.Type == "Role" && (c.Value == "Admin" | c.Value == "Manager")))
                {
            <td>

                        <a asp-action="Edit" asp-route-id="@item.Book.Guid">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Book.Guid">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Book.Guid">Delete</a>
            </td>
                }
                @if (User.HasClaim(c => c.Type == "Role" && c.Value == "User"))
                {
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Book.Guid">Details</a>|
                        @if (!item.IsIssued)
                        {
                            <a asp-action="Subscribe" asp-controller="BookIssue" asp-route-id="@item.Book.Guid">Subscribe</a>
                        }else
                        {
                            <a href="@Url.Action("RenderPdf", "User", new { path = item.Book.FilePath })">View PDF</a>
                        }
                    </td>
                }
        </tr>
}
    </tbody>
</table>
